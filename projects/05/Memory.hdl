// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16]; 

    PARTS:
    // only demux load pin to ram or screen
    // if bit14 = 0, load RAM, else i/o
    DMux(in=load, sel=address[14], a=loadram, b=loadio);

    // if bit13 = 0, load screen
    Not(in=address[13], out=not13);
    And(a=loadio, b=not13, out=loadscreen);

    // devices
    RAM16K(in=in, load=loadram, address=address[0..13], out=outram);
    Screen(in=in, load=loadscreen, address=address[0..12], out=outscreen);
    Keyboard(out=outkbd);

    // if bit0..12=0, select keyboard, else invalid (all zeros)
    Or8Way(in=address[0..7], out=selinvalid1);
    Or8Way(in[0..4]=address[8..12], in[5]=selinvalid1, in[6..7]=false, out=selinvalid);
    Mux16(a=outkbd, b[0..15]=false, sel=selinvalid, out=outvalidkbd);

    // if bit13=0, select screen, else keyboard
    Mux16(a=outscreen, b=outvalidkbd, sel=address[13], out=outio);

    // if bit14 = 0, select ram, else i/o
    Mux16(a=outram, b=outio, sel=address[14], out=out);
}
